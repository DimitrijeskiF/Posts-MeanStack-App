{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-materials.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post.service.ts","./src/app/posts/posts.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatDialogModule} from '@angular/material/dialog'\n\n@NgModule({\n imports: [\n   MatInputModule,\n   MatCardModule,\n   MatButtonModule,\n   MatToolbarModule,\n   MatExpansionModule,\n   MatProgressSpinnerModule,\n   MatPaginatorModule,\n   MatDialogModule\n ],\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\n\nexport class AngularMaterialsModule{\n\n}\n","import { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport {AuthGuard} from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard ]},\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard ] },\n  { path: 'auth', loadChildren:'./auth/auth.module#AuthModule'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Post } from './posts/post.model';\nimport {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"./auth/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor(\n    private authService: AuthService\n  ){}\n\n  ngOnInit(): void {\n    this.authService.autoAtuhUser();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { AuthInterceptor } from './auth/auth-interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {ErrorInterceptor} from \"./error-interceptor\";\nimport { ErrorComponent } from './error/error.component';\nimport {AngularMaterialsModule} from \"./angular-materials.module\";\nimport {PostsModule} from \"./posts/posts.module\";\nimport {AuthModule} from \"./auth/auth.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialsModule,\n    PostsModule,\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authService: AuthService\r\n    ){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken();\r\n        const authRequest = req.clone({\r\n            'headers': req.headers.set('Authorization', 'Bearer ' + authToken),\r\n        })\r\n        return next.handle(authRequest);\r\n    }\r\n\r\n}","import {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Router\r\n  } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\n  export class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n    ): boolean | Observable<boolean> | Promise<boolean> {\r\n      const isAuth = this.authService.getIsAuth();\r\n      if (!isAuth) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return isAuth;\r\n    }\r\n  }\r\n","import { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthData } from './auth-data.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport {environment} from \"../../environments/environment\";\nimport {B} from \"@angular/cdk/keycodes\";\n\nconst BACKEND_URL = environment.apiUrl + \"/user/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private token: string;\n  private userId: string;\n  authStateListener = new Subject<boolean>();\n  private isAuthenticated = false;\n  tokenTimeout: any;\n\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  getAuthStateListener() {\n    return this.authStateListener.asObservable();\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(BACKEND_URL + \"/signup\", authData)\n      .subscribe(() => {\n        this.router.navigate([\"/\"]);\n      }, error => {\n        this. authStateListener.next(false);\n      });\n  }\n\n  // tslint:disable-next-line:typedef\n  loginUser(email: string, password: string) {\n    const authData: AuthData = { email, password };\n    this.http.post<{ token: string, expiresIn: number, userId: string }>(BACKEND_URL + '/login', authData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresIn = response.expiresIn;\n          this. setAuthTimer(expiresIn);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStateListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresIn * 1000);\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate(['/']);\n        }\n      },\n        error => {\n          this. authStateListener.next(false);\n        });\n  }\n\n  autoAtuhUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation){\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStateListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStateListener.next(false);\n    clearTimeout(this.tokenTimeout);\n    this.clearAuthData();\n    this.userId = null;\n    this.router.navigate(['/']);\n  }\n\n  // tslint:disable-next-line:typedef\n  private setAuthTimer(duration: number){\n    this.tokenTimeout = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationDate', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expirationDate');\n    const userId = localStorage.getItem('userId');\n\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate),\n      userId\n    };\n  }\n}\n","import {HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\nimport {catchError} from \"rxjs/operators\";\nimport {throwError} from \"rxjs\";\n\nimport {MatDialog} from '@angular/material/dialog';\nimport {ErrorComponent} from \"./error/error.component\";\nimport {Injectable} from \"@angular/core\";\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error:HttpErrorResponse) => {\n        let errorMessage = 'Unknown error occurred!'\n        if(error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(error);\n      })\n    )\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message}) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Error Occurred</h1>\n<div mat-dialog-content>\n  <p>{{ data.message}}</p>\n</div>\n<div>\n  <button mat-dialog-actions mat-dialog-close mat-button color=\"accent\">Okay</button>\n</div>\n","import { AuthService } from './../auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  authSubscription: Subscription;\n  isUserAuthenticated = false;\n\n  constructor(\n   private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.isUserAuthenticated = this.authService.getIsAuth();\n    this.authSubscription = this.authService.getAuthStateListener()\n     .subscribe(isAuthenticated  => {\n       this.isUserAuthenticated = isAuthenticated;\n     });\n  }\n\n  onLogout(){\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span><a routerLink=\"\">My Messages</a></span>\n  <span class=\"spacer\"></span>\n  <ul>\n    <li *ngIf=\"isUserAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\"\n        >New Post</a\n      >\n    </li>\n    <li *ngIf=\"!isUserAuthenticated\">\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!isUserAuthenticated\">\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Sign up</a>\n    </li>\n    <li *ngIf=\"isUserAuthenticated\">\n      <button mat-button (click)=\"onLogout()\" routerLinkActive=\"mat-accent\">Log out</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if(typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};","import { PostService } from './../post.service';\nimport { Post } from './../post.model';\nimport {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { mimeType } from './mime-type.validator';\nimport {Subscription} from \"rxjs\";\nimport {AuthService} from \"../../auth/auth.service\";\n\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  addedTitle = '';\n  addedContent = '';\n  mode = 'create';\n  postId: string;\n  post: Post;\n  form: FormGroup;\n  isLoading = false;\n  imagePreview: string;\n  private authStatusSub: Subscription;\n  constructor(\n    public postService: PostService,\n    public route: ActivatedRoute,\n    public authSrvice: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  this.authStatusSub = this.authSrvice.getAuthStateListener().subscribe(authStatus => {\n      this.isLoading = false;\n    })\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.minLength(3)\n        ]\n      }),\n      content: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.minLength(5)\n        ]\n      }),\n      image: new FormControl(null, {\n        validators: [\n          Validators.required\n        ],\n        asyncValidators: [\n          mimeType\n        ]\n      })\n    });\n\n    this.route.paramMap\n      .subscribe((paramMap: ParamMap) => {\n        if (paramMap.has('postId')) {\n          this.mode = 'edit';\n          this.postId = paramMap.get('postId');\n          this.isLoading = true;\n          this.postService.getPost(this.postId)\n            .subscribe((postData) => {\n              this.isLoading = false;\n              this.post = {\n                id: postData._id,\n                title: postData.title,\n                content: postData.content,\n                imagePath: postData.imagePath,\n                creator: postData.creator\n              };\n\n              this.form.setValue({ title: this.post.title, content: this.post.content, image: this.post.imagePath });\n            });\n        } else {\n          this.mode = 'create';\n          this.postId = null;\n        }\n      });\n  }\n\n  // tslint:disable-next-line:typedef\n  onAddPost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n        );\n    } else {\n      this.postService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n        );\n    }\n    this.form.reset();\n  }\n\n  onImagePicker(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form [formGroup]=\"form\" (submit)=\"onAddPost()\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n       matInput\n       type=\"text\"\n       formControlName=\"title\"\n       placeholder=\"Post Title\" />\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter the title!</mat-error>\n    </mat-form-field>\n    <div>\n      <button mat-stroked-button type=\"button\" (click)=\"pickPhoto.click()\">\n        Pick Photo\n      </button>\n      <input type=\"file\" #pickPhoto (change)=\"onImagePicker($event)\"/>\n    </div>\n    <div *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n    </div>\n    <mat-form-field>\n      <textarea\n      matInput\n      rows=\"4\"\n      formControlName=\"content\"\n      placeholder=\"Post Content\"></textarea>\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter the content!</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n","import { AuthService } from './../../auth/auth.service';\nimport { PostService } from './../post.service';\nimport { Post } from './../post.model';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  posts: Post[] = [];\n  postSub = new Subscription();\n  authSub = new Subscription();\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 2;\n  pageSizeOptions = [1, 2, 5, 10];\n  currentPage = 1;\n  userAuthenticated = false;\n  userId: string;\n\n\n  constructor(\n    public postService: PostService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.postService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postSub = this.postService.getPostUpdatedListener()\n      .subscribe((postData: { posts: Post[], postCount }) => {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      });\n    this.userAuthenticated = this.authService.getIsAuth();\n    this.authSub = this.authService.getAuthStateListener()\n      .subscribe(isAuthenticated => {\n        this.userAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n  }\n\n  onDelete(postId: string) {\n    this.postService.deletePost(postId)\n      .subscribe(() => {\n        this.postService.getPosts(this.postsPerPage, this.currentPage);\n      }, () => {\n        this.isLoading = false;\n      });\n  }\n\n  onChangePage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n\n\n\n  ngOnDestroy() {\n    this.postSub.unsubscribe();\n    this.authSub.unsubscribe();\n  }\n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\n  <mat-expansion-panel *ngFor=\"let post of posts\">\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <div class=\"post-image\">\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\" />\n    </div>\n    <p>{{ post.content }}</p>\n    <mat-action-row *ngIf=\"userAuthenticated && userId === post.creator\">\n      <a mat-button color=\"primary\" [routerLink]=\"['/edit', post.id]\">EDIT</a>\n      <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">\n        DELETE\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator\n  *ngIf=\"posts.length > 0\"\n  [length]=\"totalPosts\"\n  [pageSize]=\"postsPerPage\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangePage($event)\"\n>\n</mat-paginator>\n<p class=\"text-info mat-body-1\" *ngIf=\"posts.length <= 0 && !isLoading\">\n  No posts added yet!\n</p>\n","import { Post } from './post.model';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport {environment} from \"../../environments/environment\";\n\nconst BACKEND_URL = environment.apiUrl + '/posts/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  private posts: Post[] = [];\n  private postUpdated = new Subject<{ posts: Post[], postCount: number }>();\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n\n  getPosts(postPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postPerPage}&page=${currentPage}`;\n    this.http.get<{ message: string, posts: any, maxPosts: number }>(BACKEND_URL + queryParams)\n      .pipe(\n        map((postData) => {\n          return {\n            posts: postData.posts.map(post => {\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postData.maxPosts\n          };\n        }))\n      .subscribe((transformedPostData) => {\n        console.log(transformedPostData);\n        this.posts = transformedPostData.posts;\n        this.postUpdated.next({ posts: [...this.posts], postCount: transformedPostData.maxPosts });\n      });\n  }\n\n  getPostUpdatedListener() {\n    return this.postUpdated.asObservable();\n  }\n\n  getPost(postId: string) {\n    return this.http.get<{ _id: string, title: string, content: string, imagePath: string, creator: string }>(BACKEND_URL + postId);\n  }\n\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n\n    this.http.post<{ message: string, post: Post }>(BACKEND_URL, postData)\n      .subscribe((responseData) => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id,\n        title,\n        content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n  }\n}\n\n","import {NgModule} from \"@angular/core\";\nimport {PostCreateComponent} from \"./post-create/post-create.component\";\nimport {PostListComponent} from \"./post-list/post-list.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {AngularMaterialsModule} from \"../angular-materials.module\";\nimport {RouterModule} from \"@angular/router\";\n\n@NgModule({\n  declarations:[\n    PostCreateComponent,\n    PostListComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialsModule,\n    RouterModule\n  ]\n\n})\n\nexport class PostsModule {\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}