{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {SignupComponent} from \"./signup/signup.component\";\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n]\n\n@NgModule({\n  imports:[RouterModule.forChild(routes)],\n  exports:[RouterModule ]\n})\n\nexport class AuthRoutingModule {}\n","import {NgModule} from \"@angular/core\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {SignupComponent} from \"./signup/signup.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AngularMaterialsModule} from \"../angular-materials.module\";\nimport {AuthRoutingModule} from \"./auth-routing.module\";\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AngularMaterialsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { AuthService } from './../auth.service';\nimport { NgForm } from '@angular/forms';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy  {\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStateListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.loginUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n    </mat-form-field>\n    <button  *ngIf=\"!isLoading\" mat-raised-button color=\"accent\" type=\"submit\">Login</button>\n  </form>\n</mat-card>","import { AuthService } from './../auth.service';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  constructor(public authService: AuthService) { }\n  private authStatusSub: Subscription;\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStateListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n\n\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\"  *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n\n"],"sourceRoot":"webpack:///"}